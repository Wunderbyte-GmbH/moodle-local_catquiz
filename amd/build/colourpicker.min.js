define("local_catquiz/colourpicker",["exports","core/templates"],(function(_exports,_templates){var obj;
/**
   * JavaScript for mod_form to reload when a CAT model has been chosen.
   *
   * @module     local_catquiz/colourpicker
   * @copyright  2023 Georg Mai√üer <info@wunderbyte.at>
   * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_templates=(obj=_templates)&&obj.__esModule?obj:{default:obj};const SELECTORS_SELECTCOLOURPICKER='select[name="colourpicker"]',SELECTORS_COLOURPICKER="span.catquiz_colourpick",SELECTORS_COLOUR="span.colourpickercircle";_exports.init=()=>{const selectcolors=document.querySelector(SELECTORS_SELECTCOLOURPICKER),colours=[...selectcolors.querySelectorAll("option")].map((el=>{const colour=el.value;return{colour:colour,colourname:el.textContent,selected:selectcolors.value==el.value,id:colour.replace("#","")}}));console.log(colours,selectcolors.value),_templates.default.renderForPromise("local_catquiz/colour_picker",{colours:colours}).then((_ref=>{let{html:html}=_ref;selectcolors.classList.add("hidden"),selectcolors.insertAdjacentHTML("afterend",html);const colourpicker=document.querySelector(SELECTORS_COLOURPICKER);console.log(selectcolors,html);const colours=colourpicker.querySelectorAll(SELECTORS_COLOUR);return console.log(selectcolors,colourpicker,colours,html),colours.forEach((el=>{el.addEventListener("click",(e=>{console.log(e.target.dataset.colour),colours.forEach((el=>el.classList.remove("selected"))),e.target.classList.add("selected"),selectcolors.value=e.target.dataset.colour}))})),!0})).catch((e=>{console.log(e)}))}}));

//# sourceMappingURL=colourpicker.min.js.map