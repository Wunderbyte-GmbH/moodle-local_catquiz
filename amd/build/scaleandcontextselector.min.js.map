{"version":3,"file":"scaleandcontextselector.min.js","sources":["../src/scaleandcontextselector.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_catquiz\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport DynamicForm from 'core_form/dynamicform';\n\nconst SELECTORS = {\n    CONTEXTFORM: \"div[id='lcq_select_context_form']\",\n    CHECKBOXSELECTOR: 'input.integrate-subscales-checkbox',\n    SCALEFORM: '#select_scale_form',\n    SCALECONTAINER: \"[id='catmanagerquestions-scaleselectors']\", // Make sure to change in the code below.\n    SELECTS: '[id*=\"select_scale_form_scaleid\"]',\n    CONTAINERCLASSSELECTOR: '.catscales-dashboard',\n};\n\n\n/**\n * Initialize the form with event listener that update url params.\n */\nexport const init = () => {\n\n    const containers = document.querySelectorAll(SELECTORS.CONTAINERCLASSSELECTOR);\n    containers.forEach(container => {\n        initComponents(container);\n    });\n};\n/**\n * Set an eventlistener for a select.\n *  @param {*} container\n *\n */\nfunction initComponents(container) {\n    // Initialize the checkbox.\n    var checkbox = container.querySelector(SELECTORS.CHECKBOXSELECTOR);\n    if (checkbox) {\n        // eslint-disable-next-line no-unused-vars\n        checkbox.addEventListener('click', e => {\n        let searchParams = new URLSearchParams(window.location.search);\n        if (checkbox.checked === true) {\n            searchParams.set(\"usesubs\", 1);\n            window.location.search = searchParams.toString();\n        } else {\n            searchParams.set(\"usesubs\", 0);\n            window.location.search = searchParams.toString();\n        }\n        });\n    }\n\n    var contextcontainer = document.querySelectorAll(SELECTORS.CONTEXTFORM);\n    contextcontainer.forEach(contextcontainer => {\n        if (contextcontainer) {\n            // Find the select element within each div.\n            var contextselector = contextcontainer.querySelector('select');\n            // Check if a select element was found.\n            if (contextselector) {\n                contextselector.addEventListener('change', function() {\n                    let searchParams = new URLSearchParams(window.location.search);\n                    searchParams.set('contextid', contextselector.value);\n                    window.location.search = searchParams.toString();\n                    });\n            }\n        }\n    });\n\n    // Attach listener to each scale select\n    const selectcontainer = container.querySelector(SELECTORS.SCALECONTAINER);\n    if (selectcontainer) {\n        var selects = selectcontainer.querySelectorAll(SELECTORS.SELECTS);\n        if (selects) {\n            selects.forEach(select => {\n                listenToSelect(select, 'local_catquiz\\\\form\\\\scaleselector', \"scaleid\");\n            });\n        }\n    }\n}\n\n/**\n * Set an eventlistener for a select.\n *  @param {*} element\n *  @param {string} location\n *  @param {string} paramname\n *\n */\nexport function listenToSelect(element, location, paramname) {\n        // Initialize the form - pass the container element and the form class name.\n        const dynamicForm = new DynamicForm(element,\n            location\n        );\n\n        // If a user selects a context, redirect to a URL that includes the selected\n        // context as `contextid` query parameter\n        dynamicForm.addEventListener(dynamicForm.events.FORM_SUBMITTED, (e) => {\n            if (!dynamicForm) {\n                return;\n            }\n\n            const response = e.detail;\n\n            let searchParams = new URLSearchParams(window.location.search);\n            // If we have scaleselector set to default, we check if there is a parentscale to apply.\n            if (paramname == \"scaleid\" && response[paramname] == \"-1\") {\n                let scaleid = getvalueofparentscaleselector(element);\n                searchParams.set(paramname, scaleid);\n            } else {\n                searchParams.set(paramname, response[paramname]);\n            }\n            searchParams.delete('contextid');\n            window.location.search = searchParams.toString();\n\n        });\n\n        dynamicForm.addEventListener('change', (e) => {\n\n            e.preventDefault();\n\n            // We have to wait a little bit so that the data are included in the submit\n            // request\n            setTimeout(() => {\n                if (dynamicForm) {\n                    dynamicForm.submitFormAjax();\n                }\n            }, 100);\n        });\n}\n\n/**\n * Check if there is a parentscaleselector,\n * read and return the value.\n * @param {*} element\n * @return {String} parentscaleid\n */\nfunction getvalueofparentscaleselector(element) {\n\n    var selectcontainer = element.closest(SELECTORS.SCALECONTAINER);\n    var selects = selectcontainer.querySelectorAll(SELECTORS.SELECTS);\n    let last;\n\n    // Make sure to get the select.\n    const select = element.closest(SELECTORS.SELECTS);\n\n    // Keep deleting the last selects until the one that triggered the change is deleted.\n    let keepdeletinglastnode = true;\n    while (keepdeletinglastnode) {\n        selects = selectcontainer.querySelectorAll(SELECTORS.SELECTS);\n        if (selects.length > 1) {\n            last = selects[selects.length - 1];\n            if (last == select) {\n                keepdeletinglastnode = false;\n            }\n            last.remove();\n        } else {\n            keepdeletinglastnode = false;\n        }\n    }\n    selects = selectcontainer.querySelectorAll(SELECTORS.SELECTS);\n    last = selects[selects.length - 1];\n    // Fetch the value of the last selector.\n    const selectedscaleid = last.querySelector('[name=\"scaleid\"]').value;\n    return selectedscaleid;\n}\n"],"names":["SELECTORS","listenToSelect","element","location","paramname","dynamicForm","DynamicForm","addEventListener","events","FORM_SUBMITTED","e","response","detail","searchParams","URLSearchParams","window","search","scaleid","selectcontainer","closest","selects","querySelectorAll","last","select","keepdeletinglastnode","length","remove","querySelector","value","getvalueofparentscaleselector","set","delete","toString","preventDefault","setTimeout","submitFormAjax","document","forEach","container","checkbox","checked","contextcontainer","contextselector","initComponents"],"mappings":";;;;;iMAuBMA,sBACW,oCADXA,2BAEgB,qCAFhBA,yBAIc,4CAJdA,kBAKO,oCALPA,iCAMsB,gCAuEZC,eAAeC,QAASC,SAAUC,iBAEpCC,YAAc,IAAIC,qBAAYJ,QAChCC,UAKJE,YAAYE,iBAAiBF,YAAYG,OAAOC,gBAAiBC,QACxDL,yBAICM,SAAWD,EAAEE,WAEfC,aAAe,IAAIC,gBAAgBC,OAAOZ,SAASa,WAEtC,WAAbZ,WAAiD,MAAvBO,SAASP,WAAoB,KACnDa,iBA8BmBf,aAE/BgB,gBAAkBhB,QAAQiB,QAAQnB,0BAClCoB,QAAUF,gBAAgBG,iBAAiBrB,uBAC3CsB,WAGEC,OAASrB,QAAQiB,QAAQnB,uBAG3BwB,sBAAuB,OACpBA,uBACHJ,QAAUF,gBAAgBG,iBAAiBrB,oBAC/ByB,OAAS,GACjBH,KAAOF,QAAQA,QAAQK,OAAS,GAC5BH,MAAQC,SACRC,sBAAuB,GAE3BF,KAAKI,UAELF,sBAAuB,EAG/BJ,QAAUF,gBAAgBG,iBAAiBrB,mBAC3CsB,KAAOF,QAAQA,QAAQK,OAAS,UAERH,KAAKK,cAAc,oBAAoBC,MAxDrCC,CAA8B3B,SAC5CW,aAAaiB,IAAI1B,UAAWa,cAE5BJ,aAAaiB,IAAI1B,UAAWO,SAASP,YAEzCS,aAAakB,OAAO,aACpBhB,OAAOZ,SAASa,OAASH,aAAamB,cAI1C3B,YAAYE,iBAAiB,UAAWG,IAEpCA,EAAEuB,iBAIFC,YAAW,KACH7B,aACAA,YAAY8B,mBAEjB,sBAtGK,KAEGC,SAASf,iBAAiBrB,kCAClCqC,SAAQC,sBASCA,eAEhBC,SAAWD,UAAUX,cAAc3B,4BACnCuC,UAEAA,SAAShC,iBAAiB,SAASG,QAC/BG,aAAe,IAAIC,gBAAgBC,OAAOZ,SAASa,SAC9B,IAArBuB,SAASC,SACT3B,aAAaiB,IAAI,UAAW,GAC5Bf,OAAOZ,SAASa,OAASH,aAAamB,aAEtCnB,aAAaiB,IAAI,UAAW,GAC5Bf,OAAOZ,SAASa,OAASH,aAAamB,eAKvBI,SAASf,iBAAiBrB,uBAChCqC,SAAQI,sBACjBA,iBAAkB,KAEdC,gBAAkBD,iBAAiBd,cAAc,UAEjDe,iBACAA,gBAAgBnC,iBAAiB,UAAU,eACnCM,aAAe,IAAIC,gBAAgBC,OAAOZ,SAASa,QACvDH,aAAaiB,IAAI,YAAaY,gBAAgBd,OAC9Cb,OAAOZ,SAASa,OAASH,aAAamB,wBAOhDd,gBAAkBoB,UAAUX,cAAc3B,6BAC5CkB,gBAAiB,KACbE,QAAUF,gBAAgBG,iBAAiBrB,mBAC3CoB,SACAA,QAAQiB,SAAQd,SACZtB,eAAesB,OAAQ,qCAAsC,eA/CrEoB,CAAeL"}