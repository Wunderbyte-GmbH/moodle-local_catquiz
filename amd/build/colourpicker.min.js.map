{"version":3,"file":"colourpicker.min.js","sources":["../src/colourpicker.js"],"sourcesContent":["/* eslint-disable no-case-declarations */\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript for mod_form to reload when a CAT model has been chosen.\n *\n * @module     local_catquiz/colourpicker\n * @copyright  2023 Georg Mai√üer <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Templates from 'core/templates';\n\nconst SELECTORS = {\n    SELECTCOLOURPICKER: 'select[name^=\"wb_colourpicker_\"]',\n    COLOURPICKER: 'span.wb_colourpick',\n    COLOUR: 'span.colourpickercircle',\n    COLOURSELECTMENU: '.colourselectnotify'\n};\n\n/**\n * Add event listener to form.\n */\nexport const init = () => {\n\n    const selectcolors = document.querySelectorAll(SELECTORS.SELECTCOLOURPICKER);\n\n    selectcolors.forEach(selectcolor => {\n        if (selectcolor.dataset.initialized) {\n            return;\n        }\n        selectcolor.dataset.initialized = 'true';\n\n        addClickListener(selectcolor);\n    });\n};\n\n/**\n * Add Click Listener to element.\n *\n * @param {mixed} selectcolor\n */\nfunction addClickListener(selectcolor) {\n    const colours = [...selectcolor.querySelectorAll('option')].map(el => {\n\n        // const colourSelectMenu = document.querySelector(SELECTORS.COLOURSELECTMENU);\n        const colour = el.value;\n        return {\n            colour,\n            colourname: el.textContent,\n            selected: selectcolor.value == el.value,\n            id: selectcolor.name\n        };\n    });\n\n    // eslint-disable-next-line no-console\n    console.log(colours, selectcolor.value);\n\n    const colourobject = colours.filter(e => e.selected).pop();\n\n    // eslint-disable-next-line no-console\n    console.log(colourobject, 'colourobject');\n\n    const data = {\n        colours,\n        colour: colourobject.colourname,\n        id: selectcolor.name\n    };\n\n    // eslint-disable-next-line no-console\n    console.log(data, 'data');\n\n    Templates.renderForPromise('local_catquiz/colour_picker', data).then(({html}) => {\n\n        //selectcolor.classList.add('hidden');\n\n        selectcolor.insertAdjacentHTML('afterend', html);\n\n        const colourpicker = document.querySelector('span[data-id=wb_colourpick_id_' + selectcolor.name + ']');\n        // eslint-disable-next-line no-console\n        console.log(colourpicker, 'colourpicker');\n\n        // eslint-disable-next-line no-console\n        console.log(selectcolor, html);\n\n        const colours = colourpicker.querySelectorAll(SELECTORS.COLOUR);\n\n        // eslint-disable-next-line no-console\n        console.log(selectcolor, colourpicker, colours, html);\n\n        colours.forEach(el => {\n            el.addEventListener('click', e => {\n\n                // eslint-disable-next-line no-console\n                console.log(e.target.dataset.colour);\n\n                colours.forEach(el => el.classList.remove('selected'));\n                e.target.classList.add('selected');\n                selectcolor.value = e.target.dataset.colour;\n\n            });\n        });\n\n        return true;\n      }).catch((e) => {\n          // eslint-disable-next-line no-console\n          console.log(e);\n      });\n}\n"],"names":["SELECTORS","document","querySelectorAll","forEach","selectcolor","dataset","initialized","colours","map","el","colour","value","colourname","textContent","selected","id","name","console","log","colourobject","filter","e","pop","data","renderForPromise","then","_ref","html","insertAdjacentHTML","colourpicker","querySelector","addEventListener","target","classList","remove","add","catch","addClickListener"],"mappings":";;;;;;;sJA0BMA,6BACkB,mCADlBA,iBAGM,wCAOQ,KAEKC,SAASC,iBAAiBF,8BAElCG,SAAQC,cACbA,YAAYC,QAAQC,cAGxBF,YAAYC,QAAQC,YAAc,gBAWhBF,mBAChBG,QAAU,IAAIH,YAAYF,iBAAiB,WAAWM,KAAIC,KAIrD,CACHC,OAFWD,GAAGE,MAGdC,WAAYH,GAAGI,YACfC,SAAUV,YAAYO,OAASF,GAAGE,MAClCI,GAAIX,YAAYY,SAKxBC,QAAQC,IAAIX,QAASH,YAAYO,aAE3BQ,aAAeZ,QAAQa,QAAOC,GAAKA,EAAEP,WAAUQ,MAGrDL,QAAQC,IAAIC,aAAc,sBAEpBI,KAAO,CACThB,QAAAA,QACAG,OAAQS,aAAaP,WACrBG,GAAIX,YAAYY,MAIpBC,QAAQC,IAAIK,KAAM,2BAERC,iBAAiB,8BAA+BD,MAAME,MAAKC,WAACC,KAACA,WAInEvB,YAAYwB,mBAAmB,WAAYD,YAErCE,aAAe5B,SAAS6B,cAAc,iCAAmC1B,YAAYY,KAAO,KAElGC,QAAQC,IAAIW,aAAc,gBAG1BZ,QAAQC,IAAId,YAAauB,YAEnBpB,QAAUsB,aAAa3B,iBAAiBF,yBAG9CiB,QAAQC,IAAId,YAAayB,aAActB,QAASoB,MAEhDpB,QAAQJ,SAAQM,KACZA,GAAGsB,iBAAiB,SAASV,IAGzBJ,QAAQC,IAAIG,EAAEW,OAAO3B,QAAQK,QAE7BH,QAAQJ,SAAQM,IAAMA,GAAGwB,UAAUC,OAAO,cAC1Cb,EAAEW,OAAOC,UAAUE,IAAI,YACvB/B,YAAYO,MAAQU,EAAEW,OAAO3B,QAAQK,cAKtC,KACN0B,OAAOf,IAENJ,QAAQC,IAAIG,MAzEdgB,CAAiBjC"}