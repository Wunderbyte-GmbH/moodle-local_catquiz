{"version":3,"file":"colourpicker.min.js","sources":["../src/colourpicker.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript for mod_form to reload when a CAT model has been chosen.\n *\n * @module     local_catquiz/colourpicker\n * @copyright  2023 Georg Mai√üer <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Templates from 'core/templates';\nimport {get_string as getString} from 'core/str';\n\nconst SELECTORS = {\n    SELECTCOLOURPICKER: 'select[name^=\"wb_colourpicker_\"]',\n    COLOURPICKER: 'span.wb_colourpick',\n    COLOUR: 'span.colourpickercircle',\n};\n\n/**\n * Add event listener to form.\n */\nexport const init = () => {\n\n    const selectcolors = document.querySelectorAll(SELECTORS.SELECTCOLOURPICKER);\n\n    selectcolors.forEach(selectcolor => {\n        if (selectcolor.dataset.initialized) {\n            return;\n        }\n        selectcolor.dataset.initialized = 'true';\n\n        addClickListener(selectcolor);\n    });\n};\n\n/**\n * Add Click Listener to element.\n *\n * @param {mixed} selectcolor\n */\nasync function addClickListener(selectcolor) {\n    const colours = await Promise.all([...selectcolor.querySelectorAll('option')].map(async el => {\n\n        const colour = el.value;\n        let colourname = el.textContent;\n        try {\n            colourname = await getString('color_' + el.value + '_name', 'local_catquiz');\n        } catch (err) {\n            // Nothing to do: we already have a default value.\n        }\n\n        return {\n            colour,\n            colourname,\n            colourvalue: el.innerHTML,\n            selected: selectcolor.value == el.value,\n            id: selectcolor.name\n        };\n    }));\n\n    const colourobject = colours.filter(e => e.selected).pop();\n\n    const data = {\n        colours,\n        colour: colourobject.colour,\n        id: selectcolor.name\n    };\n\n    Templates.renderForPromise('local_catquiz/colour_picker', data).then(({html}) => {\n\n        selectcolor.classList.add('hidden');\n        selectcolor.insertAdjacentHTML('afterend', html);\n        const colourpicker = document.querySelector('span[data-id=wb_colourpick_id_' + selectcolor.name + ']');\n        const colourselectnotify = document.querySelector('span[data-id=wb_colourselectnotify_id_' + selectcolor.name + ']');\n        const colours = colourpicker.querySelectorAll(SELECTORS.COLOUR);\n\n        colours.forEach(el => {\n            el.addEventListener('click', e => {\n                colourselectnotify.innerHTML = e.target.dataset.colourname;\n\n                colours.forEach(el => el.classList.remove('selected'));\n                e.target.classList.add('selected');\n                selectcolor.value = e.target.dataset.colour;\n            });\n        });\n        return true;\n      }).catch((e) => {\n          // eslint-disable-next-line no-console\n          console.log(e);\n      });\n}\n"],"names":["SELECTORS","document","querySelectorAll","forEach","selectcolor","dataset","initialized","colours","Promise","all","map","async","colour","el","value","colourname","textContent","err","colourvalue","innerHTML","selected","id","name","colourobject","filter","e","pop","data","renderForPromise","then","_ref","html","classList","add","insertAdjacentHTML","colourpicker","querySelector","colourselectnotify","addEventListener","target","remove","catch","console","log","addClickListener"],"mappings":";;;;;;;sJA0BMA,6BACkB,mCADlBA,iBAGM,wCAMQ,KAEKC,SAASC,iBAAiBF,8BAElCG,SAAQC,cACbA,YAAYC,QAAQC,cAGxBF,YAAYC,QAAQC,YAAc,sBAWVF,mBACtBG,cAAgBC,QAAQC,IAAI,IAAIL,YAAYF,iBAAiB,WAAWQ,KAAIC,MAAAA,WAExEC,OAASC,GAAGC,UACdC,WAAaF,GAAGG,gBAEhBD,iBAAmB,mBAAU,SAAWF,GAAGC,MAAQ,QAAS,iBAC9D,MAAOG,YAIF,CACHL,OAAAA,OACAG,WAAAA,WACAG,YAAaL,GAAGM,UAChBC,SAAUhB,YAAYU,OAASD,GAAGC,MAClCO,GAAIjB,YAAYkB,UAIlBC,aAAehB,QAAQiB,QAAOC,GAAKA,EAAEL,WAAUM,MAE/CC,KAAO,CACTpB,QAAAA,QACAK,OAAQW,aAAaX,OACrBS,GAAIjB,YAAYkB,yBAGVM,iBAAiB,8BAA+BD,MAAME,MAAKC,WAACC,KAACA,WAEnE3B,YAAY4B,UAAUC,IAAI,UAC1B7B,YAAY8B,mBAAmB,WAAYH,YACrCI,aAAelC,SAASmC,cAAc,iCAAmChC,YAAYkB,KAAO,KAC5Fe,mBAAqBpC,SAASmC,cAAc,yCAA2ChC,YAAYkB,KAAO,KAC1Gf,QAAU4B,aAAajC,iBAAiBF,yBAE9CO,QAAQJ,SAAQU,KACZA,GAAGyB,iBAAiB,SAASb,IACzBY,mBAAmBlB,UAAYM,EAAEc,OAAOlC,QAAQU,WAEhDR,QAAQJ,SAAQU,IAAMA,GAAGmB,UAAUQ,OAAO,cAC1Cf,EAAEc,OAAOP,UAAUC,IAAI,YACvB7B,YAAYU,MAAQW,EAAEc,OAAOlC,QAAQO,cAGtC,KACN6B,OAAOhB,IAENiB,QAAQC,IAAIlB,MAzDdmB,CAAiBxC"}