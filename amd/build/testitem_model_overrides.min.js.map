{"version":3,"file":"testitem_model_overrides.min.js","sources":["../src/testitem_model_overrides.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_catquiz\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport DynamicForm from 'core_form/dynamicform';\n\nconst SELECTORS = {\n    FORMCONTAINER: '#lcq_model_override_form',\n    NOEDITBUTTON: '[name=\"noedititemparams\"]',\n    MODELSTATUSSELECTS: '#lcq_model_override_form .custom-select[name^=\"override_\"]',\n    ACTIVEMODELSELECT: '[name=\"active_model\"]',\n    TEMP_FIELDS_INPUT: '[name=\"temporaryfields\"]'\n};\n\nconst disabledStates = [\"0\", \"-5\"];\n\n/**\n * Updates the active_model select according to the state of the model status\n *\n * If the state of the model is changed to excluded or not yet calculated, it can not be set as active model.\n * If the state is changed to something else, the disabled attribute is removed.\n *\n * @param {HTMLSelectElement} model\n */\nconst syncSelectedState = (model) => {\n        const selected = model.value;\n        const selectorModel = model.id.match(/id_override_(.*)_select/)[1];\n        let optionUpdateFun = (option) => option.removeAttribute('disabled');\n        if (disabledStates.includes(selected)) {\n            optionUpdateFun = (option) => option.setAttribute('disabled', 'disabled');\n        }\n        const activeModelSelect = document.querySelector(SELECTORS.ACTIVEMODELSELECT);\n        activeModelSelect.options.forEach((o) => {\n            if (o.value == selectorModel) {\n                optionUpdateFun(o);\n                return;\n            }\n        });\n};\n\n/**\n * Add event listener to the form\n */\nexport const init = () => {\n    // Initialize the form - pass the container element and the form class name.\n    const dynamicForm = new DynamicForm(document.querySelector(\n        SELECTORS.FORMCONTAINER),\n        'local_catquiz\\\\form\\\\item_model_override_selector'\n    );\n\n    const switchEditMode = (targetModeIsEditing) => {\n        console.log(`Switching edit mode to: ${targetModeIsEditing}`);\n        const searchParams = new URLSearchParams(window.location.search);\n        dynamicForm.load({\n            editing: targetModeIsEditing,\n            testitemid: searchParams.get(\"id\"),\n            contextid: searchParams.get(\"contextid\"),\n            scaleid: searchParams.get(\"scaleid\"),\n            component: searchParams.get(\"component\"),\n            updateitem: true\n        }).then(\n            // Now that the model fields were added, we can add listeners to them.\n            (result) => {\n                const modelSelectors = document.querySelectorAll(SELECTORS.MODELSTATUSSELECTS);\n                modelSelectors.forEach(model => {\n                    syncSelectedState(model);\n                    model.addEventListener('change', (e) => syncSelectedState(e.target));\n            });\n                return result;\n            }\n        ).catch(err => err);\n    }\n\n    const addItemParams = (e) => {\n        const searchParams = new URLSearchParams(window.location.search);\n        console.log('In add item params');\n        console.log(e);\n        // Construct the new input fields.\n        const lastBreak = e.detail.parentElement.parentElement.previousElementSibling;\n\n        const newFractionLabel = document.createElement('label');\n        newFractionLabel.textContent = 'Fraction X';\n        newFractionLabel.setAttribute('for', 'fraction_x');\n        const newFractionInput = document.createElement('input');\n        newFractionInput.className = 'form-control param-input';\n        newFractionInput.id = 'fraction_x';\n\n        const newDifficultyLabel = document.createElement('label');\n        newDifficultyLabel.textContent = 'Difficulty X';\n        newDifficultyLabel.setAttribute('for', 'difficulty_x');\n        const newDifficultyInput = document.createElement('input');\n        newDifficultyInput.className = 'form-control param-input';\n        newDifficultyInput.id = 'difficulty_x';\n\n        lastBreak.insertAdjacentElement('afterend', newDifficultyInput);\n        lastBreak.insertAdjacentElement('afterend', newDifficultyLabel);\n        lastBreak.insertAdjacentElement('afterend', newFractionInput);\n        lastBreak.insertAdjacentElement('afterend', newFractionLabel);\n\n\n        // Add the IDs of newly added fields to the tempFieldsInput, so that we\n        // can collect them easily when the form is submitted.\n        const tempFieldsInput = document.querySelector(SELECTORS.TEMP_FIELDS_INPUT);\n        let tempids = JSON.parse(tempFieldsInput.value);\n        tempids.push('difficulty_x')\n        tempids.push('fraction_x')\n        tempFieldsInput.value = JSON.stringify(tempids);\n    }\n\n    dynamicForm.addEventListener(dynamicForm.events.SUBMIT_BUTTON_PRESSED, (e) => {\n        console.log('Submit button pressed');\n        const tempFieldsInput = document.querySelector(SELECTORS.TEMP_FIELDS_INPUT);\n        // TODO: Replace with working code.\n        tempFieldsInput.value = JSON.stringify(\n            {\n                grm: {\n                    difficulty_x: 1.2,\n                    fraction_x: 3.4\n                }\n            }\n        );\n    });\n\n    dynamicForm.addEventListener(dynamicForm.events.FORM_SUBMITTED, (e) => {\n        console.log('Form submitted');\n        e.preventDefault();\n        let formcontainer = document.querySelector(\n            SELECTORS.FORMCONTAINER);\n        const searchParams = new URLSearchParams(window.location.search);\n        dynamicForm.load({\n            editing: formcontainer.querySelector(SELECTORS.NOEDITBUTTON) ? false : true,\n            testitemid: searchParams.get(\"id\"),\n            contextid: searchParams.get(\"contextid\"),\n            scaleid: searchParams.get(\"scaleid\"),\n            component: searchParams.get(\"component\"),\n            updateitem: true,\n        });\n    });\n\n    dynamicForm.addEventListener(dynamicForm.events.NOSUBMIT_BUTTON_PRESSED, (e) => {\n        let formcontainer = document.querySelector(\n            SELECTORS.FORMCONTAINER);\n        e.preventDefault();\n        switch (e.detail.name) {\n            case 'edititemparams':\n                switchEditMode(true);\n                break;\n            case 'noedititemparams':\n                switchEditMode(false);\n                break;\n            case 'override_grm[additemparams]':\n                addItemParams(e);\n                break;\n            default:\n                console.log(`Unknown no-submit action: ${e.detail.name}`)\n        }\n    });\n};\n"],"names":["SELECTORS","disabledStates","syncSelectedState","model","selected","value","selectorModel","id","match","optionUpdateFun","option","removeAttribute","includes","setAttribute","document","querySelector","options","forEach","o","dynamicForm","DynamicForm","switchEditMode","targetModeIsEditing","console","log","searchParams","URLSearchParams","window","location","search","load","editing","testitemid","get","contextid","scaleid","component","updateitem","then","result","querySelectorAll","addEventListener","e","target","catch","err","events","SUBMIT_BUTTON_PRESSED","JSON","stringify","grm","difficulty_x","fraction_x","FORM_SUBMITTED","preventDefault","formcontainer","NOSUBMIT_BUTTON_PRESSED","detail","name","lastBreak","parentElement","previousElementSibling","newFractionLabel","createElement","textContent","newFractionInput","className","newDifficultyLabel","newDifficultyInput","insertAdjacentElement","tempFieldsInput","tempids","parse","push","addItemParams"],"mappings":"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"}