{"version":3,"file":"testitem_model_overrides.min.js","sources":["../src/testitem_model_overrides.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_catquiz\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport DynamicForm from 'core_form/dynamicform';\nimport {get_string as getString} from 'core/str';\n\nconst SELECTORS = {\n    FORMCONTAINER: '#lcq_model_override_form',\n    NOEDITBUTTON: '[name=\"noedititemparams\"]',\n    MODELSTATUSSELECTS: '#lcq_model_override_form .custom-select[name^=\"override_\"]',\n    ACTIVEMODELSELECT: '[name=\"active_model\"]',\n    TEMP_FIELDS_INPUT: '[name=\"temporaryfields\"]',\n    DELETED_PARAMS_FIELD: '[name=\"deletedparams\"]'\n};\n\nconst disabledStates = [\"0\", \"-5\"];\n\n/**\n * Updates the active_model select according to the state of the model status\n *\n * If the state of the model is changed to excluded or not yet calculated, it can not be set as active model.\n * If the state is changed to something else, the disabled attribute is removed.\n *\n * @param {HTMLSelectElement} model\n */\nconst syncSelectedState = (model) => {\n        const selected = model.value;\n        const selectorModel = model.id.match(/id_override_(.*)_select/)[1];\n        let optionUpdateFun = (option) => option.removeAttribute('disabled');\n        if (disabledStates.includes(selected)) {\n            optionUpdateFun = (option) => option.setAttribute('disabled', 'disabled');\n        }\n        const activeModelSelect = document.querySelector(SELECTORS.ACTIVEMODELSELECT);\n        activeModelSelect.options.forEach((o) => {\n            if (o.value == selectorModel) {\n                optionUpdateFun(o);\n                return;\n            }\n        });\n};\n\nconst collectNewParamData = (addedParamIds) => {\n    let finalData = {};\n    addedParamIds.forEach(newParam => {\n        const model = newParam.model;\n        finalData[model] = finalData[model] || [];\n        const ids = newParam.ids;\n        const params = {};\n        ids.forEach(id => {\n            const element = document.getElementById(id);\n            const value = element.value;\n            params[id] = value;\n        });\n        finalData[model].push(params);\n    });\n    return finalData;\n};\n\nconst deleteParameters = (model, index) => {\n    // First, check if this is found in the tempinput data. If so, just remove it from there.\n    const tempFieldsInput = document.querySelector(SELECTORS.TEMP_FIELDS_INPUT);\n    let tempids = JSON.parse(tempFieldsInput.value);\n    let filtered = tempids.filter((newparams) => {\n        return newparams.model != model && newparams.index != index;\n    });\n    tempFieldsInput.value = JSON.stringify(filtered);\n    // If the parameter was found, it means we do not have to delete it on the server side.\n    // It was temporarily added but not yet saved. So we can return here.\n    if (filtered.length != tempids.length) {\n        return;\n    }\n\n    // If we are here, the parameter should be deleted on the server side.\n    const deletedParamsField = document.querySelector(SELECTORS.DELETED_PARAMS_FIELD);\n    let deletedParams = JSON.parse(deletedParamsField.value);\n    const deleteParam = {\n        model: model,\n        index: index\n    };\n    deletedParams.push(deleteParam);\n    deletedParamsField.value = JSON.stringify(deletedParams);\n};\n\n/**\n * This adds delete buttons to multiparam models.\n * While at it, it also restructures the HTML a bit by adding some wrapper elements to facilitate styling.\n */\nfunction restructureFormElements() {\n    // Find all .align-items-center containers\n    const containers = document.querySelectorAll('#lcq_model_override_form .param-group .align-items-center');\n\n    containers.forEach(async container => {\n        // Check if this container has a fraction input\n        const fractionInput = container.querySelector('input[type^=\"fraction_\"]');\n        if (!fractionInput) {\n            return; // Skip if no fraction input found\n        }\n\n        // Find the model name from the Add button\n        const addButton = container.querySelector('[data-action=\"additemparams\"]');\n        const modelName = addButton?.getAttribute('data-model') || '';\n\n        const elements = Array.from(container.children);\n\n        // Create new array to store restructured elements\n        const restructured = [];\n        // Keep track of how many pairs we've processed for data-param-num\n        let pairCounter = 0;\n\n        // Process elements sequentially\n        for (let i = 0; i < elements.length; i++) {\n            const currentElement = elements[i];\n\n            // Check if this is the Add button container\n            if (currentElement.querySelector('[data-action=\"additemparams\"]')) {\n                restructured.push(currentElement.cloneNode(true));\n                continue;\n            }\n\n            // Check if this is the start of a fraction input group\n            if (currentElement.tagName === 'LABEL' &&\n                elements[i + 1]?.tagName === 'INPUT' &&\n                elements[i + 1].getAttribute('type')?.startsWith('fraction_')) {\n\n                // Find the corresponding difficulty elements\n                const nextLabel = elements[i + 3];\n                const nextInput = elements[i + 4];\n\n                if (nextInput?.getAttribute('type')?.startsWith('difficulty_')) {\n                    // Create pair wrapper\n                    const pairDiv = document.createElement('div');\n                    pairDiv.className = 'param-pair';\n\n                    // Create fraction wrapper\n                    const wrapper1 = document.createElement('div');\n                    wrapper1.className = 'input-wrapper';\n                    wrapper1.appendChild(currentElement.cloneNode(true));\n                    wrapper1.appendChild(elements[i + 1].cloneNode(true));\n\n                    // Create difficulty wrapper\n                    const wrapper2 = document.createElement('div');\n                    wrapper2.className = 'input-wrapper';\n                    wrapper2.appendChild(nextLabel.cloneNode(true));\n                    wrapper2.appendChild(nextInput.cloneNode(true));\n\n                    // Create delete button with data attributes\n                    const deleteBtn = document.createElement('button');\n                    deleteBtn.className = 'btn btn-danger param-delete';\n                    deleteBtn.textContent = 'Delete';\n                    try {\n                        deleteBtn.textContent = await getString('delete');\n                    } catch (error) {\n                        // We already have a fallback, nothing to do here.\n                    }\n                    deleteBtn.setAttribute('data-param-num', pairCounter);\n                    deleteBtn.setAttribute('data-model', modelName);\n                    deleteBtn.onclick = function() {\n                        const model = this.dataset.model;\n                        const paramNum = this.dataset.paramNum;\n\n                        deleteParameters(model, paramNum);\n                        // Remove the input elements.\n                        pairDiv.remove();\n                    };\n\n                    // Assemble the pair\n                    pairDiv.appendChild(wrapper1);\n                    pairDiv.appendChild(wrapper2);\n                    pairDiv.appendChild(deleteBtn);\n\n                    restructured.push(pairDiv);\n\n                    // Skip the elements we just processed\n                    i += 4;\n                    // Increment pair counter\n                    pairCounter++;\n                }\n            } else if (currentElement.classList.contains('break')) {\n                // Keep break elements\n                restructured.push(currentElement.cloneNode(true));\n            }\n        }\n\n        // Clear and repopulate the container\n        container.innerHTML = '';\n        restructured.forEach(element => container.appendChild(element));\n    });\n}\n\nconst updateModelDisabledStates = (element) => {\n    const model = element.id.match(/id_override_(.*)_select/)[1];\n    const disabled = element.value == 1;\n    // Find the corresponding input fields\n    const inputElements = document.querySelectorAll(`input[name^=\"override_${model}[\"]`);\n    const deleteButtons = document.querySelectorAll(`button[data-model=\"${model}\"]`);\n    const addButton = document.querySelector(`input[value=\"Add\"][data-model=\"${model}\"]`);\n    const toUpdate = [...inputElements, ...deleteButtons, addButton];\n    toUpdate.forEach(e => {\n        if (disabled) {\n            e.setAttribute('disabled', 'disabled');\n        } else {\n            e.removeAttribute('disabled');\n        }\n    });\n};\n\n/**\n * Add event listener to the form\n */\nexport const init = () => {\n    // Initialize the form - pass the container element and the form class name.\n    const dynamicForm = new DynamicForm(document.querySelector(\n        SELECTORS.FORMCONTAINER),\n        'local_catquiz\\\\form\\\\item_model_override_selector'\n    );\n\n    const switchEditMode = (targetModeIsEditing) => {\n        const searchParams = new URLSearchParams(window.location.search);\n        dynamicForm.load({\n            editing: targetModeIsEditing,\n            testitemid: searchParams.get(\"id\"),\n            contextid: searchParams.get(\"contextid\"),\n            scaleid: searchParams.get(\"scaleid\"),\n            component: searchParams.get(\"component\"),\n            updateitem: true\n        }).then(\n            // Now that the model fields were added, we can add listeners to them.\n            (result) => {\n                const modelSelectors = document.querySelectorAll(SELECTORS.MODELSTATUSSELECTS);\n                modelSelectors.forEach(model => {\n                    syncSelectedState(model);\n                    model.addEventListener('change', (e) => syncSelectedState(e.target));\n                    model.addEventListener('change', e => updateModelDisabledStates(e.target));\n            });\n                // Add delete buttons etc.\n                restructureFormElements();\n                return result;\n            }\n        ).catch(err => err);\n    };\n\n    const addItemParams = (e) => {\n        // Construct the new input fields.\n        const lastBreak = e.detail.parentElement.parentElement.previousElementSibling;\n        const paramGroup = e.detail.closest('.param-group');\n        // Get the current highest number from existing fraction/difficulty inputs\n        const existingInputs = paramGroup.querySelectorAll('input[type^=\"fraction_\"], input[type^=\"difficulty_\"]');\n        const currentMax = Math.max(...Array.from(existingInputs)\n            .map(input => parseInt(input.getAttribute('type').split('_')[1] || '0'))\n        );\n        const newNumber = currentMax + 1;\n        const pairDiv = document.createElement('div');\n        pairDiv.className = 'param-pair';\n\n        // The fielddata describe the fields to add: \"internalname1:Translated;internalname2:Translated\".\n        // For example: \"difficulty:Schwierigkeit;fraction:Fraction\".\n        const fielddata = e.detail.dataset.fields.split(';');\n        let newIds = [];\n        fielddata.forEach(field => {\n            const fieldarr = field.split(':');\n            const internalName = fieldarr[0];\n            const label = fieldarr[1];\n\n            const newLabel = document.createElement('label');\n            newLabel.textContent = `${label} ${newNumber}`;\n            newLabel.setAttribute('for', `${internalName}_${newNumber}`);\n\n            const newInput = document.createElement('input');\n            newInput.className = 'form-control param-input';\n            newInput.id = `${internalName}_${newNumber}`;\n            newInput.setAttribute('type', `${internalName}_${newNumber}`);\n\n            // Create wrapper.\n            const wrapper = document.createElement('div');\n            wrapper.className = 'input-wrapper';\n            wrapper.appendChild(newLabel);\n            wrapper.appendChild(newInput);\n\n            pairDiv.appendChild(wrapper);\n            newIds.push(newInput.id);\n        });\n\n        // Create delete button with data attributes\n        const deleteBtn = document.createElement('button');\n        deleteBtn.className = 'btn btn-danger param-delete';\n        deleteBtn.textContent = 'Delete';\n        deleteBtn.setAttribute('data-param-num', currentMax);\n        deleteBtn.setAttribute('data-param-model', e.detail.dataset.model);\n        deleteBtn.onclick = function() {\n            const model = this.dataset.model;\n            const paramNum = this.dataset.paramNum;\n\n            deleteParameters(model, paramNum);\n            // Remove the input elements.\n            pairDiv.remove();\n        };\n\n        // Assemble the pair\n        pairDiv.appendChild(deleteBtn);\n\n        lastBreak.insertAdjacentElement('afterend', pairDiv);\n\n        const newBreak = document.createElement('span');\n        newBreak.className = \"break new-break\";\n        pairDiv.insertAdjacentElement('afterend', newBreak);\n\n        // Add the IDs of newly added fields to the tempFieldsInput, so that we\n        // can collect them easily when the form is submitted.\n        const tempFieldsInput = document.querySelector(SELECTORS.TEMP_FIELDS_INPUT);\n        let tempids = JSON.parse(tempFieldsInput.value);\n        const tempData = {\n            model: e.detail.dataset.model,\n            ids: newIds,\n            index: currentMax, // This is 0-based, so lower than newNumber.\n        };\n        tempids.push(tempData);\n        tempFieldsInput.value = JSON.stringify(tempids);\n    };\n\n    dynamicForm.addEventListener(dynamicForm.events.SUBMIT_BUTTON_PRESSED, () => {\n        const tempFieldsInput = document.querySelector(SELECTORS.TEMP_FIELDS_INPUT);\n        const addedParamIds = JSON.parse(tempFieldsInput.value);\n        const newParamData = collectNewParamData(addedParamIds);\n        tempFieldsInput.value = JSON.stringify(newParamData);\n    });\n\n    dynamicForm.addEventListener(dynamicForm.events.FORM_SUBMITTED, (e) => {\n        e.preventDefault();\n        let formcontainer = document.querySelector(\n            SELECTORS.FORMCONTAINER);\n        const searchParams = new URLSearchParams(window.location.search);\n        dynamicForm.load({\n            editing: formcontainer.querySelector(SELECTORS.NOEDITBUTTON) ? false : true,\n            testitemid: searchParams.get(\"id\"),\n            contextid: searchParams.get(\"contextid\"),\n            scaleid: searchParams.get(\"scaleid\"),\n            component: searchParams.get(\"component\"),\n            updateitem: true,\n        }).then(result => {\n            return result;\n        }).catch(err => err);\n    });\n\n    dynamicForm.addEventListener(dynamicForm.events.NOSUBMIT_BUTTON_PRESSED, (e) => {\n        e.preventDefault();\n        const action = e.detail.dataset.action;\n        const targetModeIsEditing = e.detail.name == 'edititemparams';\n        switch (action) {\n            case 'edititemparams':\n                switchEditMode(targetModeIsEditing);\n                break;\n            case 'additemparams':\n                addItemParams(e);\n                break;\n            default:\n                // eslint-disable-next-line no-console\n                console.error(`Unknown no-submit action: ${action}`);\n        }\n\n    });\n};\n"],"names":["SELECTORS","disabledStates","syncSelectedState","model","selected","value","selectorModel","id","match","optionUpdateFun","option","removeAttribute","includes","setAttribute","document","querySelector","options","forEach","o","deleteParameters","index","tempFieldsInput","tempids","JSON","parse","filtered","filter","newparams","stringify","length","deletedParamsField","deletedParams","deleteParam","push","dynamicForm","DynamicForm","switchEditMode","targetModeIsEditing","searchParams","URLSearchParams","window","location","search","load","editing","testitemid","get","contextid","scaleid","component","updateitem","then","result","querySelectorAll","addEventListener","e","target","element","disabled","updateModelDisabledStates","async","container","addButton","modelName","getAttribute","elements","Array","from","children","restructured","pairCounter","i","currentElement","cloneNode","tagName","_elements$getAttribut","startsWith","nextLabel","nextInput","_nextInput$getAttribu","pairDiv","createElement","className","wrapper1","appendChild","wrapper2","deleteBtn","textContent","error","onclick","this","dataset","paramNum","remove","classList","contains","innerHTML","catch","err","addItemParams","lastBreak","detail","parentElement","previousElementSibling","existingInputs","closest","currentMax","Math","max","map","input","parseInt","split","newNumber","fielddata","fields","newIds","field","fieldarr","internalName","label","newLabel","newInput","wrapper","insertAdjacentElement","newBreak","tempData","ids","events","SUBMIT_BUTTON_PRESSED","newParamData","addedParamIds","finalData","newParam","params","getElementById","collectNewParamData","FORM_SUBMITTED","preventDefault","formcontainer","NOSUBMIT_BUTTON_PRESSED","action","name","console"],"mappings":"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"}