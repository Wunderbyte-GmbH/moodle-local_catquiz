{"version":3,"file":"catquizTestChooser.min.js","sources":["../src/catquizTestChooser.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript for mod_form to reload when a CAT model has been chosen.\n *\n * @module     mod_adaptivequiz/catquizTestChooser\n * @copyright  2023 Georg Mai√üer <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nconst SELECTORS = {\n    CATTESTCHOOSER: '[data-on-change-action]',\n    CATTESTSUBMIT: '[data-action=\"submitCatTest\"]',\n    CATSCALESUBMIT: '[data-action=\"submitCatScale\"]',\n    CATSCALESUBMITCONTAINER: '[id=\"fitem_id_submitcatscaleoption\"]',\n    CATTESTCHECKBOXES: 'input[name^=\"catquiz_subscalecheckbox\"]',\n    NUMBEROFFEEDBACKSSUBMIT: '[data-action=\"submitNumberOfFeedbackOptions\"]'\n};\n\n/**\n * Initialise it all.\n */\nexport const init = () => {\n\n    const selectors = document.querySelectorAll(SELECTORS.CATTESTCHOOSER);\n    const checkboxes = document.querySelectorAll(SELECTORS.CATTESTCHECKBOXES);\n\n    var elements = new Set([\n        ...selectors,\n        ...checkboxes\n    ]);\n    if (!elements) {\n        return;\n    }\n\n    if (elements.length === 0) {\n        return;\n    }\n    elements.forEach(selector =>\n        selector.addEventListener('change', e => {\n            // Setting defines if reload should be triggered automatically.\n            if (e.target.dataset.manualreload) {\n                let submitbuttoncontainer = document.querySelector(SELECTORS.CATSCALESUBMITCONTAINER);\n                submitbuttoncontainer.classList.remove('hidden');\n\n                let submitbutton = document.querySelector(SELECTORS.CATSCALESUBMIT);\n                submitbutton.classList.remove('btn-primary');\n                submitbutton.classList.add('btn-danger');\n                submitbutton.classList.remove('hidden');\n                return;\n            }\n\n            switch (e.target.dataset.onChangeAction) {\n                case 'reloadTestForm':\n                    clickNoSubmitButton(e.target, SELECTORS.CATTESTSUBMIT);\n                    break;\n                case 'reloadFormFromScaleSelect':\n                    clickNoSubmitButton(e.target, SELECTORS.CATSCALESUBMIT);\n                    break;\n                case 'numberOfFeedbacksSubmit':\n                    clickNoSubmitButton(e.target, SELECTORS.NUMBEROFFEEDBACKSSUBMIT);\n                    break;\n            }\n\n        })\n    );\n\n};\n\n/**\n * No Submit Button triggered.\n * @param {HTMLElement} element\n * @param {string} buttonselector\n */\nfunction clickNoSubmitButton(element, buttonselector) {\n\n    const form = element.closest('form');\n    // Find container for query selector.\n    const submitCatTest = form.querySelector(buttonselector);\n    const fieldset = submitCatTest.closest('fieldset');\n\n    // eslint-disable-next-line no-console\n    console.log(submitCatTest, 'submitCatTest');\n\n    const url = new URL(form.action);\n    url.hash = fieldset.id;\n\n    form.action = url.toString();\n    submitCatTest.click();\n}"],"names":["SELECTORS","clickNoSubmitButton","element","buttonselector","form","closest","submitCatTest","querySelector","fieldset","console","log","url","URL","action","hash","id","toString","click","selectors","document","querySelectorAll","checkboxes","elements","Set","length","forEach","selector","addEventListener","e","target","dataset","manualreload","classList","remove","submitbutton","add","onChangeAction"],"mappings":";;;;;;;;MAuBMA,yBACc,0BADdA,wBAEa,gCAFbA,yBAGc,iCAHdA,kCAIuB,uCAJvBA,4BAKiB,0CALjBA,kCAMuB,yDA0DpBC,oBAAoBC,QAASC,sBAE5BC,KAAOF,QAAQG,QAAQ,QAEvBC,cAAgBF,KAAKG,cAAcJ,gBACnCK,SAAWF,cAAcD,QAAQ,YAGvCI,QAAQC,IAAIJ,cAAe,uBAErBK,IAAM,IAAIC,IAAIR,KAAKS,QACzBF,IAAIG,KAAON,SAASO,GAEpBX,KAAKS,OAASF,IAAIK,WAClBV,cAAcW,sBAlEE,WAEVC,UAAYC,SAASC,iBAAiBpB,0BACtCqB,WAAaF,SAASC,iBAAiBpB,iCAEzCsB,SAAW,IAAIC,IAAI,IAChBL,aACAG,aAEFC,UAImB,IAApBA,SAASE,QAGbF,SAASG,SAAQC,UACbA,SAASC,iBAAiB,UAAUC,OAE5BA,EAAEC,OAAOC,QAAQC,aAAc,CACHZ,SAASZ,cAAcP,mCAC7BgC,UAAUC,OAAO,cAEnCC,aAAef,SAASZ,cAAcP,iCAC1CkC,aAAaF,UAAUC,OAAO,eAC9BC,aAAaF,UAAUG,IAAI,mBAC3BD,aAAaF,UAAUC,OAAO,iBAI1BL,EAAEC,OAAOC,QAAQM,oBAChB,iBACDnC,oBAAoB2B,EAAEC,OAAQ7B,mCAE7B,4BACDC,oBAAoB2B,EAAEC,OAAQ7B,oCAE7B,0BACDC,oBAAoB2B,EAAEC,OAAQ7B"}