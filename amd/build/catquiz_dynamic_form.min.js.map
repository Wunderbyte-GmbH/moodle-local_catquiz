{"version":3,"file":"catquiz_dynamic_form.min.js","sources":["../src/catquiz_dynamic_form.js"],"sourcesContent":["/*\n * @package    local_catquiz\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport DynamicForm from 'core_form/dynamicform';\nimport {showNotification} from 'local_catquiz/notifications';\nimport {get_string as getString} from 'core/str';\n\n/**\n * Extended DynamicForm class with custom error handling for timeouts.\n */\nexport default class CatquizDynamicForm extends DynamicForm {\n    /**\n     * Override the onSubmitError method to handle timeout errors.\n     *\n     * @param {string|Object} exception The error message or object.\n     * @protected\n     */\n    async onSubmitError(exception) {\n        // Common timeout messages from different server setups.\n        const timeoutMessages = [\n            'Gateway Timeout',\n            '504',\n            'timeout',\n            'request timed out',\n            'gateway time-out'\n        ];\n\n        // Check if the error message includes any of our timeout indicators.\n        const isTimeout = timeoutMessages.some(msg =>\n            exception?.toString().toLowerCase().includes(msg.toLowerCase())\n        );\n\n        if (isTimeout) {\n            // Prevent the default error handling.\n            const event = this.trigger(this.events.ERROR, exception);\n            if (event.defaultPrevented) {\n                return;\n            }\n\n            try {\n                const message = await getString('requesttimeout', 'local_catquiz');\n                showNotification(message, 'danger', false);\n            } catch (error) {\n                // Fallback if string loading fails.\n                showNotification('The request timed out. Please try again.', 'danger', false);\n            }\n            return;\n        }\n\n        // For all other errors, use the parent class handling.\n        super.onSubmitError(exception);\n    }\n}\n"],"names":["CatquizDynamicForm","DynamicForm","exception","some","msg","toString","toLowerCase","includes","this","trigger","events","ERROR","defaultPrevented","message","error","onSubmitError"],"mappings":";;;;;6JAaqBA,2BAA2BC,yCAOxBC,cAEQ,CACpB,kBACA,MACA,UACA,oBACA,oBAI8BC,MAAKC,KACnCF,MAAAA,iBAAAA,UAAWG,WAAWC,cAAcC,SAASH,IAAIE,qBAKnCE,KAAKC,QAAQD,KAAKE,OAAOC,MAAOT,WACpCU,kCAKAC,cAAgB,mBAAU,iBAAkB,qDACjCA,QAAS,UAAU,GACtC,MAAOC,2CAEY,2CAA4C,UAAU,eAMzEC,cAAcb"}