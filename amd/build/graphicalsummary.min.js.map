{"version":3,"file":"graphicalsummary.min.js","sources":["../src/graphicalsummary.js"],"sourcesContent":["\n// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_catquiz\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport ModalFactory from 'core/modal_factory';\nimport {addIconToContainerWithPromise} from 'core/loadingicon';\n\n\n/**\n * Add event listeners.\n */\nexport const init = async () => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const attemptid = urlParams.get('attempt');\n    const instanceid = urlParams.get('instance');\n    const rows = document.querySelectorAll('tr>td>.clickable');\n    rows.forEach(row => {\n        row.addEventListener('click', async function() {\n            // Show loader icon until we have the question.\n            let iconPromise = addIconToContainerWithPromise(row);\n            const slot = this.getAttribute('data-slot');\n            const questiondata = await fetchQuestionData(slot, attemptid, instanceid);\n            // Hide the loader icon by resolving it.\n            iconPromise.resolve();\n            const modal = await ModalFactory.create({\n                title: questiondata.title,\n                body: questiondata.questionhtml,\n            });\n            modal.show();\n        });\n    });\n};\n\n/**\n * @param {integer} slot Question slot\n * @param {integer} attemptid The attempt ID\n * @param {integer} instanceid The instance ID\n * @return string\n */\nconst fetchQuestionData = async (slot, attemptid, instanceid) => {\n    let data = await Ajax.call([{\n        methodname: 'local_catquiz_render_question_with_response',\n        args: {\n            slot: slot,\n            attemptid: attemptid,\n            instanceid: instanceid,\n        }\n    }])[0];\n    return {\n        questionhtml: data.questionhtml,\n        title: 'This is the title',\n    };\n};\n"],"names":["async","urlParams","URLSearchParams","window","location","search","attemptid","get","instanceid","document","querySelectorAll","forEach","row","addEventListener","iconPromise","slot","this","getAttribute","questiondata","fetchQuestionData","resolve","ModalFactory","create","title","body","questionhtml","show","Ajax","call","methodname","args"],"mappings":";;;;;0LA8BoBA,gBACVC,UAAY,IAAIC,gBAAgBC,OAAOC,SAASC,QAChDC,UAAYL,UAAUM,IAAI,WAC1BC,WAAaP,UAAUM,IAAI,YACpBE,SAASC,iBAAiB,oBAClCC,SAAQC,MACTA,IAAIC,iBAAiB,SAASb,qBAEtBc,aAAc,8CAA8BF,WAC1CG,KAAOC,KAAKC,aAAa,aACzBC,mBAAqBC,kBAAkBJ,KAAMT,UAAWE,YAE9DM,YAAYM,iBACQC,uBAAaC,OAAO,CACpCC,MAAOL,aAAaK,MACpBC,KAAMN,aAAaO,gBAEjBC,oBAWZP,kBAAoBnB,MAAOe,KAAMT,UAAWE,cASvC,CACHiB,oBATaE,cAAKC,KAAK,CAAC,CACxBC,WAAY,8CACZC,KAAM,CACFf,KAAMA,KACNT,UAAWA,UACXE,WAAYA,eAEhB,IAEmBiB,aACnBF,MAAO"}