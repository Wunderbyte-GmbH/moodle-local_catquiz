{"version":3,"file":"manage_catscale.min.js","sources":["../src/manage_catscale.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_shopping_cart\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalForm from 'core_form/modalform';\nimport {get_string as getString} from 'core/str';\nimport Ajax from 'core/ajax';\nimport {showNotification} from 'local_catquiz/notifications';\n\n/**\n * Add event listener to buttons.\n */\nexport const init = () => {\n\n    // eslint-disable-next-line no-console\n    console.log('manage catscale init');\n\n    let buttons = document.querySelectorAll('.manage-catscale');\n    buttons.forEach(button => {\n        button.addEventListener('click', e => {\n            e.preventDefault();\n            const element = e.target;\n            if (element.dataset.action === \"delete\") {\n                performDeletion(element);\n            } else {\n                manageCatscale(element);\n            }\n        });\n    });\n};\n\n/**\n *\n * @param {*} button\n */\nfunction manageCatscale(button) {\n    const parentelement = button.closest('.list-group-item');\n    const action = button.dataset.action;\n    let formclass = \"local_catquiz\\\\form\\\\modal_manage_catscale\";\n    let formvalues = { id: parentelement.dataset.id, description: parentelement.dataset.description,\n        name: parentelement.dataset.name, parentid: parentelement.dataset.parentid };\n    // eslint-disable-next-line no-console\n    console.log(formvalues);\n    switch (action) {\n        case 'create':\n            formvalues = {parentid: parentelement.dataset.id};\n            break;\n    }\n    let modalForm = new ModalForm({\n        // Name of the class where form is defined (must extend \\core_form\\dynamic_form):\n        formClass: formclass,\n        // Add as many arguments as you need, they will be passed to the form:\n        args: formvalues,\n        // Pass any configuration settings to the modal dialogue, for example, the title:\n        modalConfig: {title: getString('managecatscale', 'local_catquiz')},\n        // DOM element that should get the focus after the modal dialogue is closed:\n        returnFocus: button,\n    });\n\n    // Listen to events if you want to execute something on form submit.\n    // Event detail will contain everything the process() function returned:\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e) => {\n        window.console.log(e.detail);\n\n        // Reload window after cancelling.\n        window.location.reload();\n\n        // eslint-disable-next-line no-console\n        console.log('createCatscale: form submitted');\n    });\n\n    // Show the form.\n    modalForm.show();\n}\n\n/**\n *\n * @param {*} element\n */\nexport const performDeletion = async(element) => {\n\n    // eslint-disable-next-line no-console\n    console.log('performDeletion');\n\n    const parentelement = element.closest('.list-group-item');\n    const id = parentelement.dataset.id;\n    Ajax.call([{\n        methodname: 'local_catquiz_delete_catscale',\n        args: {id: id}\n        ,\n        done: function(res) {\n            // eslint-disable-next-line no-console\n            console.log(res);\n\n            if (res.success) {\n                window.reload();\n            } else {\n                showNotification(res.message, 'danger');\n            }\n        },\n        fail: ex => {\n            // eslint-disable-next-line no-console\n            console.log(\"ex:\" + ex);\n        },\n    }]);\n};\n"],"names":["console","log","document","querySelectorAll","forEach","button","addEventListener","e","preventDefault","element","target","dataset","action","performDeletion","parentelement","closest","formclass","formvalues","id","description","name","parentid","modalForm","ModalForm","formClass","args","modalConfig","title","returnFocus","events","FORM_SUBMITTED","window","detail","location","reload","show","manageCatscale","async","call","methodname","done","res","success","message","fail","ex"],"mappings":";;;;;2MA6BoB,KAGhBA,QAAQC,IAAI,wBAEEC,SAASC,iBAAiB,oBAChCC,SAAQC,SACZA,OAAOC,iBAAiB,SAASC,IAC7BA,EAAEC,uBACIC,QAAUF,EAAEG,OACa,WAA3BD,QAAQE,QAAQC,OAChBC,gBAAgBJ,kBAYRJ,cACdS,cAAgBT,OAAOU,QAAQ,oBAC/BH,OAASP,OAAOM,QAAQC,WAC1BI,UAAY,6CACZC,WAAa,CAAEC,GAAIJ,cAAcH,QAAQO,GAAIC,YAAaL,cAAcH,QAAQQ,YAChFC,KAAMN,cAAcH,QAAQS,KAAMC,SAAUP,cAAcH,QAAQU,aAI7D,YAFTrB,QAAQC,IAAIgB,YACJL,QAEAK,WAAa,CAACI,SAAUP,cAAcH,QAAQO,QAGlDI,UAAY,IAAIC,mBAAU,CAE1BC,UAAWR,UAEXS,KAAMR,WAENS,YAAa,CAACC,OAAO,mBAAU,iBAAkB,kBAEjDC,YAAavB,SAKjBiB,UAAUhB,iBAAiBgB,UAAUO,OAAOC,gBAAiBvB,IACzDwB,OAAO/B,QAAQC,IAAIM,EAAEyB,QAGrBD,OAAOE,SAASC,SAGhBlC,QAAQC,IAAI,qCAIhBqB,UAAUa,OA/CEC,CAAe3B,sBAsDlBI,gBAAkBwB,MAAAA,UAG3BrC,QAAQC,IAAI,yBAGNiB,GADgBT,QAAQM,QAAQ,oBACbJ,QAAQO,iBAC5BoB,KAAK,CAAC,CACPC,WAAY,gCACZd,KAAM,CAACP,GAAIA,IAEXsB,KAAM,SAASC,KAEXzC,QAAQC,IAAIwC,KAERA,IAAIC,QACJX,OAAOG,6CAEUO,IAAIE,QAAS,WAGtCC,KAAMC,KAEF7C,QAAQC,IAAI,MAAQ4C"}