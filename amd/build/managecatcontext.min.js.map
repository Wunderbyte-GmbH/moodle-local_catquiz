{"version":3,"file":"managecatcontext.min.js","sources":["../src/managecatcontext.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_shopping_cart\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalForm from 'core_form/modalform';\nimport {get_string as getString} from 'core/str';\nimport Ajax from 'core/ajax';\nimport {showNotification} from 'local_catquiz/notifications';\n\nconst SELECTORS = {\n    'MANAGECATCONTEXT': '.manage-catcontext',\n};\n\n\n/**\n * Add event listener to buttons.\n */\nexport const init = () => {\n    let buttons = document.querySelectorAll(SELECTORS.MANAGECATCONTEXT);\n    buttons.forEach(button => {\n\n        if (button.initialized) {\n            return;\n        }\n\n        button.initialized = true;\n\n        button.addEventListener('click', e => {\n            e.preventDefault();\n            const element = e.target;\n            if (element.dataset.action === \"delete\") {\n                performDeletion(element);\n            } else {\n                managecatcontext(element);\n            }\n        });\n    });\n};\n\n/**\n *\n * @param {*} button\n */\nfunction managecatcontext(button) {\n    const action = button.dataset.action;\n    let formclass = \"local_catquiz\\\\form\\\\edit_catcontext\";\n    let formvalues = {\n        id: button.dataset.id ?? 0,\n    };\n\n    switch (action) {\n        case 'create':\n            formvalues = {parentid: button.dataset.id ?? 0};\n            break;\n    }\n    let modalForm = new ModalForm({\n        // Name of the class where form is defined (must extend \\core_form\\dynamic_form):\n        formClass: formclass,\n        // Add as many arguments as you need, they will be passed to the form:\n        args: formvalues,\n        // Pass any configuration settings to the modal dialogue, for example, the title:\n        modalConfig: {title: getString('managecatcontexts', 'local_catquiz')},\n        // DOM element that should get the focus after the modal dialogue is closed:\n        returnFocus: button,\n    });\n\n    // Listen to events if you want to execute something on form submit.\n    // Event detail will contain everything the process() function returned:\n    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, () => {\n\n        // Reload window after cancelling.\n        window.location.reload();\n    });\n\n    // Show the form.\n    modalForm.show();\n}\n\n/**\n *\n * @param {*} element\n */\nexport const performDeletion = async(element) => {\n\n    const parentelement = element.closest('.list-group-item');\n    const id = parentelement.dataset.id;\n    Ajax.call([{\n        methodname: 'local_catquiz_delete_catcontext',\n        args: {id: id},\n        done: function(res) {\n\n            if (res.success) {\n                window.location.reload();\n            } else {\n                showNotification(res.message, 'danger');\n            }\n        },\n        fail: ex => {\n            // eslint-disable-next-line no-console\n            console.log(\"ex:\" + ex);\n        },\n    }]);\n};"],"names":["SELECTORS","document","querySelectorAll","forEach","button","initialized","addEventListener","e","preventDefault","element","target","dataset","action","performDeletion","formclass","formvalues","id","parentid","modalForm","ModalForm","formClass","args","modalConfig","title","returnFocus","events","FORM_SUBMITTED","window","location","reload","show","managecatcontext","async","closest","call","methodname","done","res","success","message","fail","ex","console","log"],"mappings":";;;;;mMA0BMA,2BACkB,mCAOJ,KACFC,SAASC,iBAAiBF,4BAChCG,SAAQC,SAERA,OAAOC,cAIXD,OAAOC,aAAc,EAErBD,OAAOE,iBAAiB,SAASC,IAC7BA,EAAEC,uBACIC,QAAUF,EAAEG,OACa,WAA3BD,QAAQE,QAAQC,OAChBC,gBAAgBJ,kBAYNL,yDAChBQ,OAASR,OAAOO,QAAQC,WAC1BE,UAAY,uCACZC,WAAa,CACbC,8BAAIZ,OAAOO,QAAQK,oDAAM,MAIpB,WADDJ,OAEAG,WAAa,CAACE,qCAAUb,OAAOO,QAAQK,sDAAM,OAGjDE,UAAY,IAAIC,mBAAU,CAE1BC,UAAWN,UAEXO,KAAMN,WAENO,YAAa,CAACC,OAAO,mBAAU,oBAAqB,kBAEpDC,YAAapB,SAKjBc,UAAUZ,iBAAiBY,UAAUO,OAAOC,gBAAgB,KAGxDC,OAAOC,SAASC,YAIpBX,UAAUY,OA1CEC,CAAiBtB,uBAiDpBI,gBAAkBmB,MAAAA,gBAGrBhB,GADgBP,QAAQwB,QAAQ,oBACbtB,QAAQK,iBAC5BkB,KAAK,CAAC,CACPC,WAAY,kCACZd,KAAM,CAACL,GAAIA,IACXoB,KAAM,SAASC,KAEPA,IAAIC,QACJX,OAAOC,SAASC,6CAECQ,IAAIE,QAAS,WAGtCC,KAAMC,KAEFC,QAAQC,IAAI,MAAQF"}