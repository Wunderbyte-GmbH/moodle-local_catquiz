{"version":3,"file":"reloadTemplate.min.js","sources":["../src/reloadTemplate.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_catquiz\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport {showNotification} from 'local_catquiz/notifications';\nimport Templates from 'core/templates';\n\nexport const init = (selector) => {\n\n    let elements = document.querySelectorAll(selector);\n\n    elements.forEach(element => {\n        let data = element.dataset;\n        element.addEventListener('click', e => {\n            e.stopPropagation();\n\n            let jsondata = JSON.stringify(data);\n\n            transmitAction(jsondata);\n        });\n    });\n};\n\n/**\n * Ajax function to handle action buttons.\n * @param {string} data\n */\nexport function transmitAction(data) {\nAjax.call([{\n  methodname: \"local_catquiz_reload_template\",\n  args: {\n    'data': data,\n  },\n  done: function(response) {\n\n    if (response.success == 1) {\n      showNotification(response.message, \"success\");\n      reloadTemplate(data, response);\n    } else {\n      showNotification(data.message, \"danger\");\n    }\n  },\n  fail: function(ex) {\n    // eslint-disable-next-line no-console\n    console.log(\"ex:\" + ex);\n\n    showNotification(\"Something went wrong\", \"danger\");\n  },\n}]);\n\n/**\n * Reloads template defined in the data of the object that was clicked on.\n * @param {object} data\n * @param {string} response\n */\nfunction reloadTemplate(data, response) {\n\n// Parse the data of object that triggered the change.\nconst dataobject = JSON.parse(data);\nconst template = dataobject.templatelocation;\nconst templateid = \"[data-templateid='\" + dataobject.templatelocation + \"']\";\n\n// The data of the response gives us the context for the template.\nconst responseobject = JSON.parse(response.data);\n\nTemplates.renderForPromise(template, responseobject).then(({html, js}) => {\n\n    Templates.replaceNode(templateid, html, js);\n    return true;\n  }).catch((e) => {\n      // eslint-disable-next-line no-console\n      console.log(e);\n  });\n}\n}"],"names":["transmitAction","data","call","methodname","args","done","response","success","message","dataobject","JSON","parse","template","templatelocation","templateid","responseobject","renderForPromise","then","_ref","html","js","replaceNode","catch","e","console","log","reloadTemplate","fail","ex","selector","document","querySelectorAll","forEach","element","dataset","addEventListener","stopPropagation","stringify"],"mappings":";;;;;oNA6CgBA,eAAeC,oBAC1BC,KAAK,CAAC,CACTC,WAAY,gCACZC,KAAM,MACIH,MAEVI,KAAM,SAASC,UAEW,GAApBA,SAASC,6CACMD,SAASE,QAAS,oBAmBjBP,KAAMK,gBAGxBG,WAAaC,KAAKC,MAAMV,MACxBW,SAAWH,WAAWI,iBACtBC,WAAa,qBAAuBL,WAAWI,iBAAmB,KAGlEE,eAAiBL,KAAKC,MAAML,SAASL,yBAEjCe,iBAAiBJ,SAAUG,gBAAgBE,MAAKC,WAACC,KAACA,KAADC,GAAOA,mCAEpDC,YAAYP,WAAYK,KAAMC,KACjC,KACNE,OAAOC,IAENC,QAAQC,IAAIF,MAlCZG,CAAezB,KAAMK,+CAEJL,KAAKO,QAAS,WAGnCmB,KAAM,SAASC,IAEbJ,QAAQC,IAAI,MAAQG,wCAEH,uBAAwB,4BAvCxBC,WAEFC,SAASC,iBAAiBF,UAEhCG,SAAQC,cACThC,KAAOgC,QAAQC,QACnBD,QAAQE,iBAAiB,SAASZ,IAC9BA,EAAEa,kBAIFpC,eAFeU,KAAK2B,UAAUpC"}