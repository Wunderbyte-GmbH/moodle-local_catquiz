{"version":3,"file":"manage_catscale_questions.min.js","sources":["../src/manage_catscale_questions.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    local_catquiz\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport DynamicForm from 'core_form/dynamicform';\n\nconst SELECTORS = {\n    CONTEXTFORM: '#select_context_form',\n    CHECKBOX: 'input.integrate-subscales-checkbox',\n    SCALEFORM: '#select_scale_form',\n    SUBSCALEFORM: '#select_subscale_form',\n};\n\n\n/**\n * Initialize the form with event listener that update url params.\n */\nexport const init = () => {\n\n    // Initialize the checkbox.\n    const checkbox = document.querySelector(SELECTORS.CHECKBOX);\n    // eslint-disable-next-line no-unused-vars\n    checkbox.addEventListener('click', e => {\n        let searchParams = new URLSearchParams(window.location.search);\n        if (checkbox.checked === true) {\n            searchParams.set(\"usesubs\", 1);\n            window.location.search = searchParams.toString();\n        } else {\n            searchParams.set(\"usesubs\", 0);\n            window.location.search = searchParams.toString();\n        }\n    });\n\n    // Context: Add event listener to select and set URL params.\n    listenToSelect(SELECTORS.CONTEXTFORM, 'local_catquiz\\\\form\\\\contextselector', \"contextid\");\n    listenToSelect(SELECTORS.SCALEFORM, 'local_catquiz\\\\form\\\\scaleselector', \"scale\");\n    listenToSelect(SELECTORS.SUBSCALEFORM, 'local_catquiz\\\\form\\\\scaleselector', \"subscale\");\n};\n/**\n * Set an eventlistener for a select.\n *  @param {string} selector\n *  @param {string} location\n *  @param {string} paramname\n *\n */\nfunction listenToSelect(selector, location, paramname) {\n        // Initialize the form - pass the container element and the form class name.\n        const dynamicForm = new DynamicForm(document.querySelector(\n            selector),\n            location\n        );\n        // If a user selects a context, redirect to a URL that includes the selected\n        // context as `contextid` query parameter\n        dynamicForm.addEventListener(dynamicForm.events.FORM_SUBMITTED, (e) => {\n            e.preventDefault();\n\n            const response = e.detail;\n\n            let searchParams = new URLSearchParams(window.location.search);\n            // If we change the scale, we delete the selected subscales.\n            if (paramname === \"scale\") {\n                searchParams.delete(\"subscale\");\n            }\n            if (typeof response === 'object' && response !== null) {\n                searchParams.set(Object.keys(response)[0], Object.values(response)[0]);\n            } else {\n                if (!response.contextid) {\n                    return;\n                }\n                searchParams.set(paramname, response.contextid);\n            }\n            window.location.search = searchParams.toString();\n        });\n\n        // If a user selects a cat context, submit the form without waiting for the\n        // user to click the submit button\n        dynamicForm.addEventListener('change', (e) => {\n            e.preventDefault();\n\n            // We have to wait a little bit so that the data are included in the submit\n            // request\n            setTimeout(() => {\n                dynamicForm.submitFormAjax();\n            }, 500);\n        });\n\n}\n"],"names":["SELECTORS","listenToSelect","selector","location","paramname","dynamicForm","DynamicForm","document","querySelector","addEventListener","events","FORM_SUBMITTED","e","preventDefault","response","detail","searchParams","URLSearchParams","window","search","delete","set","Object","keys","values","contextid","toString","setTimeout","submitFormAjax","checkbox","checked"],"mappings":";;;;;0JAuBMA,sBACW,uBADXA,mBAEQ,qCAFRA,oBAGS,qBAHTA,uBAIY,iCAmCTC,eAAeC,SAAUC,SAAUC,iBAE9BC,YAAc,IAAIC,qBAAYC,SAASC,cACzCN,UACAC,UAIJE,YAAYI,iBAAiBJ,YAAYK,OAAOC,gBAAiBC,IAC7DA,EAAEC,uBAEIC,SAAWF,EAAEG,WAEfC,aAAe,IAAIC,gBAAgBC,OAAOf,SAASgB,WAErC,UAAdf,WACAY,aAAaI,OAAO,YAEA,iBAAbN,UAAsC,OAAbA,SAChCE,aAAaK,IAAIC,OAAOC,KAAKT,UAAU,GAAIQ,OAAOE,OAAOV,UAAU,QAChE,KACEA,SAASW,iBAGdT,aAAaK,IAAIjB,UAAWU,SAASW,WAEzCP,OAAOf,SAASgB,OAASH,aAAaU,cAK1CrB,YAAYI,iBAAiB,UAAWG,IACpCA,EAAEC,iBAIFc,YAAW,KACPtB,YAAYuB,mBACb,sBAlEK,WAGVC,SAAWtB,SAASC,cAAcR,oBAExC6B,SAASpB,iBAAiB,SAASG,QAC3BI,aAAe,IAAIC,gBAAgBC,OAAOf,SAASgB,SAC9B,IAArBU,SAASC,SACTd,aAAaK,IAAI,UAAW,GAC5BH,OAAOf,SAASgB,OAASH,aAAaU,aAEtCV,aAAaK,IAAI,UAAW,GAC5BH,OAAOf,SAASgB,OAASH,aAAaU,eAK9CzB,eAAeD,sBAAuB,uCAAwC,aAC9EC,eAAeD,oBAAqB,qCAAsC,SAC1EC,eAAeD,uBAAwB,qCAAsC"}